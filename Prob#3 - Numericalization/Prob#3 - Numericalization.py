n,m1,m2 = input().split() #รับ Input ตามที่กำหนด
m1,m2 = int(m1),int(m2)

def patternConstruct() :

    pattern = dict() 

    for i in range(10) :
        pattern[str(i)] = list()

    pattern["0"].extend([["0","0","0","0","0"],
                         ["0"," "," "," ","0"],
                         ["0"," "," "," ","0"],
                         ["0"," "," "," ","0"],
                         ["0","0","0","0","0"]])

    pattern["1"].extend([[" "," "," "," ","1"],
                         [" "," "," "," ","1"],
                         [" "," "," "," ","1"],
                         [" "," "," "," ","1"],
                         [" "," "," "," ","1"]])

    pattern["2"].extend([["2","2","2","2","2"],
                         [" "," "," "," ","2"],
                         ["2","2","2","2","2"],
                         ["2"," "," "," "," "],
                         ["2","2","2","2","2"]])

    pattern["3"].extend([["3","3","3","3","3"],
                         [" "," "," "," ","3"],
                         ["3","3","3","3","3"],
                         [" "," "," "," ","3"],
                         ["3","3","3","3","3"]])

    pattern["4"].extend([["4"," "," "," ","4"],
                         ["4"," "," "," ","4"],
                         ["4","4","4","4","4"],
                         [" "," "," "," ","4"],
                         [" "," "," "," ","4"]])

    pattern["5"].extend([["5","5","5","5","5"],
                         ["5"," "," "," "," "],
                         ["5","5","5","5","5"],
                         [" "," "," "," ","5"],
                         ["5","5","5","5","5"]])

    pattern["6"].extend([["6","6","6","6","6"],
                         ["6"," "," "," "," "],
                         ["6","6","6","6","6"],
                         ["6"," "," "," ","6"],
                         ["6","6","6","6","6"]])
                         
    pattern["7"].extend([["7","7","7","7","7"],
                         [" "," "," "," ","7"],
                         [" "," "," "," ","7"],
                         [" "," "," "," ","7"],
                         [" "," "," "," ","7"]])

    pattern["8"].extend([["8","8","8","8","8"],
                         ["8"," "," "," ","8"],
                         ["8","8","8","8","8"],
                         ["8"," "," "," ","8"],
                         ["8","8","8","8","8"]])

    pattern["9"].extend([["9","9","9","9","9"],
                         ["9"," "," "," ","9"],
                         ["9","9","9","9","9"],
                         [" "," "," "," ","9"],
                         [" "," "," "," ","9"]])
                         
        
    return pattern
    
    
pattern = patternConstruct() 
text = ""

for i in range(5) :

    text = ""       #Reset ค่าของทุกบรรทัด

    for j in n :
        for k in pattern[j][i] : #pattern[j][i] จะให้ pattern ของเลข j บรรทัดที่ i
            text += k*m2 #เติมบรรทัดด้วยสมาชิกแต่ละตัวคูณด้วยกำลังขยายในแกน x
        text += " "*m2 #ช่องว่างเท่ากับกำลังขยาย

    for k in range(m1) :
        print(text) #บรรทัดเดิมจะถูก print ซ้ำตามจำนวนกำลังขยายแกน y
        
    
        
